{"version":3,"file":"bond.js","sourceRoot":"","sources":["../../test/bond.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  createPermission,\n  getNewAddressFromEvents,\n  grantPermission,\n  testEvent,\n  testRevert,\n  timeTravel,\n} from '@settlemint/enteth-migration-utils';\nimport dayjs from 'dayjs';\nimport faker from 'faker';\nimport Web3 from 'web3'; // one dir up, because it is compiled into ./dist/migrations\n\nimport { BondContract, BondInstance ,BondFactoryContract, BondFactoryInstance,BondRegistryContract, BondRegistryInstance , CurrencyContract, CurrencyInstance,CurrencyFactoryContract, CurrencyFactoryInstance,CurrencyRegistryContract, CurrencyRegistryInstance, GateKeeperContract, GateKeeperInstance } from '../types/truffle-contracts';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { storeIpfsHash } = require('../truffle-config.js');\n\nconst Bond: BondContract = artifacts.require('Bond');\nconst BondFactory: BondFactoryContract = artifacts.require('BondFactory');\nconst BondRegistry: BondRegistryContract = artifacts.require('BondRegistry');\nconst GateKeeper: GateKeeperContract = artifacts.require('GateKeeper');\nconst Currency: CurrencyContract = artifacts.require('Currency');\nconst CurrencyFactory: CurrencyFactoryContract = artifacts.require('CurrencyFactory');\nconst CurrencyRegistry: CurrencyRegistryContract = artifacts.require('CurrencyRegistry');\n\nconst DECIMALS = 4;\nconst ZERO = Web3.utils.toBN(0);\nconst TWO = Web3.utils.toBN(10 ** DECIMALS * 2);\nconst THREE = Web3.utils.toBN(10 ** DECIMALS * 3);\nconst FIVE = Web3.utils.toBN(10 ** DECIMALS * 5);\nconst MILLION = Web3.utils.toBN(10 ** DECIMALS * 1000000);\n\nconst UINTMAX = Web3.utils.toBN(2).pow(Web3.utils.toBN(256)).sub(Web3.utils.toBN(1));\n\ncontract('Bond', (accounts) => {\n  let gateKeeper: GateKeeperInstance;\n  let bond: BondInstance;\n  let bondFactory: BondFactoryInstance;\n  let bondRegistry: BondRegistryInstance;\n  let currency: CurrencyInstance;\n  let currencyFactory: CurrencyFactoryInstance;\n  let currencyRegistry: CurrencyRegistryInstance;\n  let startDate: number;\n  let ipfsHash: string;\n\n  async function verifyApproval(tx: Truffle.TransactionResponse, from: string, to: string, amount: BN) {\n    const allowance = await bond.allowance(accounts[0], accounts[1]);\n    assert(allowance.eq(amount), `Allowance of ${allowance.toString()} should be ${amount.toString()}`);\n    testEvent(tx, 'Approval', {\n      owner: from,\n      spender: to,\n      value: amount.toString(),\n    });\n  }\n\n  before(async function () {\n    gateKeeper = await GateKeeper.new();\n    // Currency\n    currencyRegistry = await CurrencyRegistry.new(gateKeeper.address);\n    await createPermission(gateKeeper, currencyRegistry, 'LIST_TOKEN_ROLE', accounts[0], accounts[0]);\n    currencyFactory = await CurrencyFactory.new(currencyRegistry.address, gateKeeper.address);\n    await createPermission(gateKeeper, currencyFactory, 'CREATE_TOKEN_ROLE', accounts[0], accounts[0]);\n    await grantPermission(gateKeeper, currencyRegistry, 'LIST_TOKEN_ROLE', currencyFactory.address);\n    await grantPermission(gateKeeper, gateKeeper, 'CREATE_PERMISSIONS_ROLE', currencyFactory.address);\n    await createPermission(gateKeeper, currencyFactory, 'UPDATE_UIFIELDDEFINITIONS_ROLE', accounts[0], accounts[0]);\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const currencyHash = await storeIpfsHash(require('../contracts/currency/UIDefinitions.json'));\n    await currencyFactory.setUIFieldDefinitionsHash(currencyHash);\n    const currencyTx = await currencyFactory.createToken(faker.finance.currencyName(), DECIMALS);\n    const currencyAddress = getNewAddressFromEvents(currencyTx, 'TokenCreated');\n    // tslint:disable-next-line: no-any\n    currency = await ((Currency.at(currencyAddress) as any) as Promise<CurrencyInstance>);\n    // Bonds\n    bondRegistry = await BondRegistry.new(gateKeeper.address);\n    await createPermission(gateKeeper, bondRegistry, 'LIST_TOKEN_ROLE', accounts[0], accounts[0]);\n    bondFactory = await BondFactory.new(bondRegistry.address, gateKeeper.address);\n    await createPermission(gateKeeper, bondFactory, 'CREATE_TOKEN_ROLE', accounts[0], accounts[0]);\n    await grantPermission(gateKeeper, bondRegistry, 'LIST_TOKEN_ROLE', bondFactory.address);\n    await grantPermission(gateKeeper, gateKeeper, 'CREATE_PERMISSIONS_ROLE', bondFactory.address);\n    await createPermission(gateKeeper, bondFactory, 'UPDATE_UIFIELDDEFINITIONS_ROLE', accounts[0], accounts[0]);\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const hash = await storeIpfsHash(require('../contracts/bonds/UIDefinitions.json'));\n    await bondFactory.setUIFieldDefinitionsHash(hash);\n\n    // go 1 day in te future\n    await timeTravel(3600 * 24);\n\n    ipfsHash = await storeIpfsHash({\n      isin: faker.finance.iban(),\n      issuer: faker.company.companyName(),\n    });\n\n    const tx = await bondFactory.createToken(\n      faker.company.companyName(),\n      10 ** DECIMALS * 1000,\n      currency.address,\n      24,\n      10,\n      6,\n      DECIMALS,\n      ipfsHash\n    );\n    const bondAddress = getNewAddressFromEvents(tx, 'TokenCreated');\n    // tslint:disable-next-line: no-any\n    bond = await ((Bond.at(bondAddress) as any) as Promise<BondInstance>);\n  });\n\n  describe('totalSupply()', () => {\n    it('should have initial supply of 0', async () => {\n      const totalSupply = await bond.totalSupply();\n      assert(totalSupply.eq(ZERO));\n    });\n  });\n\n  describe('balanceOf(owner)', () => {\n    it('should have correct initial balances', async () => {\n      const balance = await bond.balanceOf(accounts[0]);\n      assert(balance.eq(ZERO));\n    });\n  });\n\n  describe('allowance(owner, spender)', () => {\n    it('should have correct initial allowance', async () => {\n      const allowance = await bond.allowance(accounts[0], accounts[1]);\n      assert(allowance.eq(ZERO));\n    });\n\n    it('should return the correct allowance', async () => {\n      const tx = await bond.approve(accounts[1], THREE, { from: accounts[0] });\n      await verifyApproval(tx, accounts[0], accounts[1], THREE);\n    });\n  });\n\n  describe('approve(spender, value)', () => {\n    it('should return true when approving 0', async () => {\n      assert.isTrue(await bond.approve.call(accounts[1], ZERO, { from: accounts[0] }));\n      const tx = await bond.approve(accounts[1], ZERO, { from: accounts[0] });\n      await verifyApproval(tx, accounts[0], accounts[1], ZERO);\n    });\n\n    it('should return true when approving', async () => {\n      assert.isTrue(await bond.approve.call(accounts[1], THREE, { from: accounts[0] }));\n      const tx = await bond.approve(accounts[1], THREE, { from: accounts[0] });\n      await verifyApproval(tx, accounts[0], accounts[1], THREE);\n    });\n\n    it('should return true when updating approval to the same', async () => {\n      assert.isTrue(await bond.approve.call(accounts[1], THREE, { from: accounts[0] }));\n      const tx = await bond.approve(accounts[1], THREE, { from: accounts[0] });\n      await verifyApproval(tx, accounts[0], accounts[1], THREE);\n    });\n\n    it('should return true when updating approval to less', async () => {\n      assert.isTrue(await bond.approve.call(accounts[1], TWO, { from: accounts[0] }));\n      const tx = await bond.approve(accounts[1], TWO, { from: accounts[0] });\n      await verifyApproval(tx, accounts[0], accounts[1], TWO);\n    });\n\n    it('should return true when updating approval to more', async () => {\n      assert.isTrue(await bond.approve.call(accounts[1], FIVE, { from: accounts[0] }));\n      const tx = await bond.approve(accounts[1], FIVE, { from: accounts[0] });\n      await verifyApproval(tx, accounts[0], accounts[1], FIVE);\n    });\n\n    it('should return true when updating approval to 0', async () => {\n      assert.isTrue(await bond.approve.call(accounts[1], ZERO, { from: accounts[0] }));\n      const tx = await bond.approve(accounts[1], ZERO, { from: accounts[0] });\n      await verifyApproval(tx, accounts[0], accounts[1], ZERO);\n    });\n\n    it('should fire Approval event', async () => {\n      const tx = await bond.approve(accounts[1], FIVE, { from: accounts[0] });\n      await verifyApproval(tx, accounts[0], accounts[1], FIVE);\n    });\n\n    it('should fire Approval when allowance was set to 0', async () => {\n      const tx = await bond.approve(accounts[1], ZERO, { from: accounts[0] });\n      await verifyApproval(tx, accounts[0], accounts[1], ZERO);\n    });\n\n    it('should fire Approval even when allowance did not change', async () => {\n      let tx = await bond.approve(accounts[1], THREE, { from: accounts[0] });\n      await verifyApproval(tx, accounts[0], accounts[1], THREE);\n      tx = await bond.approve(accounts[1], THREE, { from: accounts[0] });\n      await verifyApproval(tx, accounts[0], accounts[1], THREE);\n    });\n  });\n\n  describe('increaseApproval(spender, value)', () => {\n    it('should return true when increasing approval', async () => {\n      await bond.approve(accounts[1], THREE, { from: accounts[0] });\n      assert.isTrue(await bond.increaseApproval.call(accounts[1], TWO, { from: accounts[0] }));\n      const tx = await bond.increaseApproval(accounts[1], TWO, { from: accounts[0] });\n      await verifyApproval(tx, accounts[0], accounts[1], FIVE);\n    });\n\n    it('should revert when approval cannot be increased', async function () {\n      await bond.approve(accounts[1], FIVE, { from: accounts[0] });\n      await testRevert(bond.increaseApproval(accounts[1], UINTMAX, { from: accounts[0] }));\n    });\n  });\n\n  describe('decreaseApproval(spender, value)', () => {\n    it('should return true when decreasing approval', async () => {\n      await bond.approve(accounts[1], FIVE, { from: accounts[0] });\n      assert.isTrue(await bond.decreaseApproval.call(accounts[1], TWO, { from: accounts[0] }));\n      const tx = await bond.decreaseApproval(accounts[1], TWO, { from: accounts[0] });\n      await verifyApproval(tx, accounts[0], accounts[1], THREE);\n    });\n  });\n\n  describe('getUIFieldDefinitionsHash()', () => {\n    it('the factory has UI definitions', async () => {\n      const uiFieldDefinitionsHash = await bondFactory.getUIFieldDefinitionsHash();\n      assert.isNotNull(uiFieldDefinitionsHash);\n    });\n    it('the bond has the same UI definitions', async () => {\n      const factoryUiFieldDefinitionsHash = await bondFactory.getUIFieldDefinitionsHash();\n      const uiFieldDefinitionsHash = await bond._uiFieldDefinitionsHash();\n      assert.equal(uiFieldDefinitionsHash, factoryUiFieldDefinitionsHash);\n    });\n  });\n\n  describe('mint(address _to, uint256 _amount)', () => {\n    it('mint new tokens', async () => {\n      const balanceBefore = await bond.balanceOf(accounts[1]);\n      assert.equal(balanceBefore.toNumber(), 0);\n      const tx = await bond.mint(accounts[1], FIVE);\n      testEvent(tx, 'Mint', { to: accounts[1], amount: FIVE.toString() });\n      testEvent(tx, 'Transfer', {\n        from: '0x0000000000000000000000000000000000000000',\n        to: accounts[1],\n        value: FIVE.toString(),\n      });\n      const balanceAfter = await bond.balanceOf(accounts[1]);\n      assert.equal(balanceAfter.toNumber(), FIVE.toNumber());\n    });\n  });\n\n  describe('burn(address _from, uint256 _amount)', () => {\n    it('burn tokens', async () => {\n      await bond.mint(accounts[2], FIVE);\n      const balanceBefore = await bond.balanceOf(accounts[2]);\n      assert.equal(balanceBefore.toNumber(), FIVE.toNumber());\n      const tx = await bond.burn(accounts[2], TWO);\n      testEvent(tx, 'Burn', { from: accounts[2], amount: TWO.toString() });\n      testEvent(tx, 'Transfer', {\n        from: accounts[2],\n        to: '0x0000000000000000000000000000000000000000',\n        value: TWO.toString(),\n      });\n      const balanceAfter = await bond.balanceOf(accounts[2]);\n      assert.equal(balanceAfter.toNumber(), THREE.toNumber());\n    });\n  });\n\n  describe('transfer(address _to, uint256 _value)', () => {\n    it('transfer tokens', async () => {\n      await bond.mint(accounts[3], FIVE);\n      const balanceBefore = await bond.balanceOf(accounts[3]);\n      assert.equal(balanceBefore.toNumber(), FIVE.toNumber());\n      const tx = await bond.transfer(accounts[4], TWO, { from: accounts[3] });\n      testEvent(tx, 'Transfer', {\n        from: accounts[3],\n        to: accounts[4],\n        value: TWO.toString(),\n      });\n      const balanceAfterFrom = await bond.balanceOf(accounts[3]);\n      assert.equal(balanceAfterFrom.toNumber(), THREE.toNumber());\n      const balanceAfterTo = await bond.balanceOf(accounts[4]);\n      assert.equal(balanceAfterTo.toNumber(), TWO.toNumber());\n    });\n  });\n\n  describe('transferWithData(address _to, uint256 _value, bytes _data)', () => {\n    it('transfer tokens with data', async () => {\n      await bond.mint(accounts[5], FIVE);\n      const balanceBefore = await bond.balanceOf(accounts[5]);\n      assert.equal(balanceBefore.toNumber(), FIVE.toNumber());\n      const tx = await bond.transferWithData(accounts[6], THREE, Web3.utils.asciiToHex('some-payment-reference'), {\n        from: accounts[5],\n      });\n      testEvent(tx, 'Transfer', {\n        from: accounts[5],\n        to: accounts[6],\n        value: THREE.toString(),\n      });\n      testEvent(tx, 'TransferData', {\n        from: accounts[5],\n        to: accounts[6],\n        data: Web3.utils.asciiToHex('some-payment-reference'),\n      });\n      const balanceAfter0 = await bond.balanceOf(accounts[5]);\n      assert.equal(balanceAfter0.toNumber(), TWO.toNumber());\n      const balanceAfter1 = await bond.balanceOf(accounts[6]);\n      assert.equal(balanceAfter1.toNumber(), THREE.toNumber());\n    });\n  });\n\n  describe('transferFrom (address _from, address _to, uint256 _value )', () => {\n    it('transfer tokens from', async () => {\n      await bond.mint(accounts[8], FIVE);\n      const balanceBefore1 = await bond.balanceOf(accounts[8]);\n      assert.equal(balanceBefore1.toNumber(), FIVE.toNumber());\n      const balanceBefore2 = await bond.balanceOf(accounts[7]);\n      assert.equal(balanceBefore2.toNumber(), ZERO.toNumber());\n      await bond.approve(accounts[0], FIVE, { from: accounts[8] });\n      const tx = await bond.transferFrom(accounts[8], accounts[7], THREE);\n      testEvent(tx, 'Transfer', {\n        from: accounts[8],\n        to: accounts[7],\n        value: THREE.toString(),\n      });\n      const balanceAfter0 = await bond.balanceOf(accounts[8]);\n      assert.equal(balanceAfter0.toNumber(), TWO.toNumber());\n      const balanceAfter1 = await bond.balanceOf(accounts[7]);\n      assert.equal(balanceAfter1.toNumber(), THREE.toNumber());\n    });\n  });\n\n  describe('transferFromWithData(address _from,address _to,uint256 _value,bytes _data)', () => {\n    it('transfer tokens from with data', async () => {\n      await bond.mint(accounts[8], THREE); // TWO from previous test\n      const balanceBefore1 = await bond.balanceOf(accounts[8]);\n      assert.equal(balanceBefore1.toNumber(), FIVE.toNumber());\n      const balanceBefore2 = await bond.balanceOf(accounts[9]);\n      assert.equal(balanceBefore2.toNumber(), ZERO.toNumber());\n      await bond.approve(accounts[0], THREE, { from: accounts[8] });\n      const tx = await bond.transferFromWithData(\n        accounts[8],\n        accounts[9],\n        THREE,\n        Web3.utils.asciiToHex('some-payment-reference')\n      );\n      testEvent(tx, 'Transfer', {\n        from: accounts[8],\n        to: accounts[9],\n        value: THREE.toString(),\n      });\n      testEvent(tx, 'TransferData', {\n        from: accounts[8],\n        to: accounts[9],\n        data: Web3.utils.asciiToHex('some-payment-reference'),\n      });\n      const balanceAfter0 = await bond.balanceOf(accounts[8]);\n      assert.equal(balanceAfter0.toNumber(), TWO.toNumber());\n      const balanceAfter1 = await bond.balanceOf(accounts[9]);\n      assert.equal(balanceAfter1.toNumber(), THREE.toNumber());\n    });\n  });\n\n  describe('edit(string memory name,uint256 parValue,Currency parCurrency,uint256 maturityPeriod,uint256 couponRate,uint256 couponPeriod,uint8 decimals,string memory ipfsFieldContainerHash)', () => {\n    it('can edit the offchain data of a bond', async () => {\n      await bond.edit(await bond._name(), 10 ** DECIMALS * 1000, currency.address, 24, 10, 6, DECIMALS, ipfsHash);\n    });\n    it('can edit the onchain data of a bond', async () => {\n      await bond.edit(\n        faker.company.companyName(),\n        10 ** DECIMALS * 2000,\n        currency.address,\n        24,\n        10,\n        6,\n        DECIMALS,\n        await bond.getIpfsFieldContainerHash()\n      );\n    });\n    it('can edit the both the onchain and offchain data of a bond', async () => {\n      await bond.edit(\n        faker.company.companyName(),\n        10 ** DECIMALS * 3000,\n        currency.address,\n        24,\n        10,\n        6,\n        DECIMALS,\n        ipfsHash\n      );\n    });\n    it('can no longer edit after the launch period is set', async () => {\n      await bond.edit(\n        faker.company.companyName(),\n        10 ** DECIMALS * 3000,\n        currency.address,\n        24,\n        10,\n        6,\n        DECIMALS,\n        ipfsHash\n      );\n      startDate = dayjs().add(10, 'day').unix();\n      await bond.setIssuanceDate(startDate);\n      await bond.edit(\n        faker.company.companyName(),\n        10 ** DECIMALS * 3000,\n        currency.address,\n        24,\n        10,\n        6,\n        DECIMALS,\n        ipfsHash\n      );\n      await bond.launch(startDate);\n      await timeTravel(3600 * 24 * 12);\n      await testRevert(\n        bond.edit(faker.company.companyName(), 10 ** DECIMALS * 3000, currency.address, 24, 10, 6, DECIMALS, ipfsHash)\n      );\n    });\n  });\n\n  const couponFixture = [\n    [\n      true,\n      '390000',\n      '0',\n      [\n        '0x4A15DeD528F963c9408ceb8e19f9f97Bcf5D31D2',\n        '0x745A6Bd46c2Ec788Cb044b7d9e61aE1063aA2B57',\n        '0x4Bd0ed5458a63D7ab7A73b39E73b09b43BF8f3FA',\n        '0xfE86238Ed27Fd807c994c2850feD037C91fCb2D2',\n        '0x0dE74DAbB8ad4886055b432043360216bcb01f48',\n        '0xA7dC926D3526C46d3A1B254Ca932D293a8c8bAb8',\n        '0x799213f3b7ADAF228792f5FfD3aDEf3302209F36',\n        '0x666e84ce97379Ae34fdC6B0D15A3e0B1e4c31b24',\n        '0xbf4ce2704d662007bB37b434A33eC6ff7087b526',\n      ],\n      ['75000', '45000', '45000', '30000', '30000', '45000', '30000', '45000', '45000'],\n    ],\n    [\n      true,\n      '390000',\n      '0',\n      [\n        '0x4A15DeD528F963c9408ceb8e19f9f97Bcf5D31D2',\n        '0x745A6Bd46c2Ec788Cb044b7d9e61aE1063aA2B57',\n        '0x4Bd0ed5458a63D7ab7A73b39E73b09b43BF8f3FA',\n        '0xfE86238Ed27Fd807c994c2850feD037C91fCb2D2',\n        '0x0dE74DAbB8ad4886055b432043360216bcb01f48',\n        '0xA7dC926D3526C46d3A1B254Ca932D293a8c8bAb8',\n        '0x799213f3b7ADAF228792f5FfD3aDEf3302209F36',\n        '0x666e84ce97379Ae34fdC6B0D15A3e0B1e4c31b24',\n        '0xbf4ce2704d662007bB37b434A33eC6ff7087b526',\n      ],\n      ['75000', '45000', '45000', '30000', '30000', '45000', '30000', '45000', '45000'],\n    ],\n    [false, '0', '0', [], []],\n    [false, '0', '0', [], []],\n  ];\n\n  describe('getCoupons()', () => {\n    it('can get a list of all the balances', async () => {\n      const length = await bond.getIndexLength();\n      const balances: string[] = [];\n      for (let i = 0; i < length.toNumber(); i++) {\n        const balance = await bond.getByIndex(i);\n        balances.push(`${balance[0]} - ${balance[1].toString()}`);\n      }\n      expect(balances).to.deep.equal([\n        '0x4A15DeD528F963c9408ceb8e19f9f97Bcf5D31D2 - 50000',\n        '0x745A6Bd46c2Ec788Cb044b7d9e61aE1063aA2B57 - 30000',\n        '0x4Bd0ed5458a63D7ab7A73b39E73b09b43BF8f3FA - 30000',\n        '0xfE86238Ed27Fd807c994c2850feD037C91fCb2D2 - 20000',\n        '0x0dE74DAbB8ad4886055b432043360216bcb01f48 - 20000',\n        '0xA7dC926D3526C46d3A1B254Ca932D293a8c8bAb8 - 30000',\n        '0x799213f3b7ADAF228792f5FfD3aDEf3302209F36 - 20000',\n        '0x666e84ce97379Ae34fdC6B0D15A3e0B1e4c31b24 - 30000',\n        '0xbf4ce2704d662007bB37b434A33eC6ff7087b526 - 30000',\n      ]);\n    });\n\n    it('can get a list of all the coupons', async () => {\n      const coupons = await bond.coupons();\n      expect(coupons).to.deep.equal([\n        [false, '0', '0', [], []],\n        [false, '0', '0', [], []],\n        [false, '0', '0', [], []],\n        [false, '0', '0', [], []],\n      ]);\n    });\n\n    it('can get a list of all the coupon days', async () => {\n      const couponDates = await bond.couponDates();\n      expect(couponDates.map((cd) => cd.toNumber())).to.deep.equal([\n        startDate + 6 * 4 * 7 * 24 * 3600,\n        startDate + 12 * 4 * 7 * 24 * 3600,\n        startDate + 18 * 4 * 7 * 24 * 3600,\n        startDate + 24 * 4 * 7 * 24 * 3600,\n      ]);\n    });\n\n    it('can get a list of some activated coupons', async () => {\n      await timeTravel(3600 * 24 * 7 * 52);\n      await bond.updateCoupons();\n      const coupons = await bond.coupons();\n\n      expect(coupons).to.deep.equal(couponFixture);\n    });\n  });\n\n  describe('redeemCoupons(address)', () => {\n    it('can redeem coupons', async () => {\n      await currency.mint(bond.address, MILLION);\n      await bond.redeemCoupons(accounts[1]);\n      const coupons = await bond.coupons();\n      couponFixture[0][2] = '75000';\n      couponFixture[0][4][0] = '0';\n      couponFixture[1][2] = '75000';\n      couponFixture[1][4][0] = '0';\n      expect(coupons).to.deep.equal(couponFixture);\n    });\n  });\n\n  describe('claimPar(address)', () => {\n    it('can claim the par back', async () => {\n      await currency.mint(bond.address, MILLION);\n      await bond.claimPar(accounts[2]);\n      const coupons = await bond.coupons();\n      couponFixture[0][2] = '120000';\n      couponFixture[0][4][1] = '0';\n      couponFixture[1][2] = '120000';\n      couponFixture[1][4][1] = '0';\n      expect(coupons).to.deep.equal(couponFixture);\n      const length = await bond.getIndexLength();\n      const balances: string[] = [];\n      for (let i = 0; i < length.toNumber(); i++) {\n        const balance = await bond.getByIndex(i);\n        balances.push(`${balance[0]} - ${balance[1].toString()}`);\n      }\n      expect(balances).to.deep.equal([\n        '0x4A15DeD528F963c9408ceb8e19f9f97Bcf5D31D2 - 50000',\n        '0x745A6Bd46c2Ec788Cb044b7d9e61aE1063aA2B57 - 0',\n        '0x4Bd0ed5458a63D7ab7A73b39E73b09b43BF8f3FA - 30000',\n        '0xfE86238Ed27Fd807c994c2850feD037C91fCb2D2 - 20000',\n        '0x0dE74DAbB8ad4886055b432043360216bcb01f48 - 20000',\n        '0xA7dC926D3526C46d3A1B254Ca932D293a8c8bAb8 - 30000',\n        '0x799213f3b7ADAF228792f5FfD3aDEf3302209F36 - 20000',\n        '0x666e84ce97379Ae34fdC6B0D15A3e0B1e4c31b24 - 30000',\n        '0xbf4ce2704d662007bB37b434A33eC6ff7087b526 - 30000',\n      ]);\n    });\n  });\n});\n"]}