{"version":3,"file":"6_deploy_vehicle.js","sourceRoot":"","sources":["../../migrations/6_deploy_vehicle.ts"],"names":[],"mappings":";;AAAA,+EAAiG;AAOjG,MAAM,UAAU,GAAuB,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AACvE,MAAM,eAAe,GAA4B,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;AACtF,MAAM,cAAc,GAA2B,SAAS,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACnF,MAAM,iBAAiB,GAA8B,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAC5F,MAAM,wBAAwB,GAAqC,SAAS,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;AAEjH,8DAA8D;AAC9D,MAAM,EAAE,eAAe,EAAE,aAAa,EAAE,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC,6DAA6D;AAE5I,MAAM,CAAC,OAAO,GAAG,KAAK,EAAE,QAA0B,EAAE,OAAe,EAAE,QAAkB,EAAE,EAAE;IACzF,IAAI,eAAe,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;QACzC,8DAA8D;QAC9D,MAAM,aAAa,GAAG,OAAO,CAAC,4CAA4C,CAAC,CAAC;QAE5E,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,iDAAwB,CAChD,QAAQ,EACR,QAAQ,EACR,UAAU,EACV,eAAe,EACf,cAAc,EACd,CAAC,iBAAiB,EAAE,wBAAwB,CAAC,EAC7C,aAAa,EACb,aAAa,CACd,CAAC;QAEF,MAAM,QAAQ,GAAG;YACf;gBACE,GAAG,EAAE,mBAAmB;gBACxB,KAAK,EAAE,4CAA4C;gBACnD,OAAO,EAAE,CAAC;gBACV,IAAI,EAAE,KAAK;gBACX,WAAW,EAAE,QAAQ;gBACrB,qBAAqB,EAAE,UAAU;gBACjC,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,cAAc;gBACrB,OAAO,EAAE,QAAQ;gBACjB,MAAM,EAAE,KAAK;gBACb,cAAc,EAAE,QAAQ;aACzB;YACD;gBACE,GAAG,EAAE,mBAAmB;gBACxB,KAAK,EAAE,4CAA4C;gBACnD,OAAO,EAAE,KAAK;gBACd,IAAI,EAAE,KAAK;gBACX,WAAW,EAAE,QAAQ;gBACrB,qBAAqB,EAAE,UAAU;gBACjC,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,UAAU;gBACjB,OAAO,EAAE,OAAO;gBAChB,MAAM,EAAE,OAAO;aAChB;SACF,CAAC;QAEF,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;YAC9B,MAAM,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;SACvC;KACF;AACH,CAAC,CAAC;AAEF,KAAK,UAAU,aAAa,CAC1B,OAA+B,EAC/B,OAYC;IAED,MAAM,QAAQ,GAAG,MAAM,0CAAiB,CAAC;QACvC,IAAI,EAAE,OAAO,CAAC,IAAI;QAClB,WAAW,EAAE,OAAO,CAAC,WAAW;QAChC,qBAAqB,EAAE,OAAO,CAAC,qBAAqB;QACpD,IAAI,EAAE,OAAO,CAAC,IAAI;QAClB,KAAK,EAAE,OAAO,CAAC,KAAK;QACpB,OAAO,EAAE,OAAO,CAAC,OAAO;QACxB,MAAM,EAAE,OAAO,CAAC,MAAM;QACtB,cAAc,EAAE,OAAO,CAAC,cAAc;KACvC,CAAC,CAAC;IACH,MAAM,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AAC9E,CAAC","sourcesContent":["import { deployStateMachineSystem, storeIpfsJsonData } from '@settlemint/enteth-migration-utils';\nimport { GateKeeperContract } from '../types/truffle-contracts/GateKeeper';\nimport { VehicleRegistryContract } from '../types/truffle-contracts/VehicleRegistry';\nimport { VehicleFactoryContract, VehicleFactoryInstance } from '../types/truffle-contracts/VehicleFactory';\nimport { AdminRoleRegistryContract } from '../types/truffle-contracts/AdminRoleRegistry';\nimport { ManufacturerRoleRegistryContract } from '../types/truffle-contracts/ManufacturerRoleRegistry';\n\nconst GateKeeper: GateKeeperContract = artifacts.require('GateKeeper');\nconst VehicleRegistry: VehicleRegistryContract = artifacts.require('VehicleRegistry');\nconst VehicleFactory: VehicleFactoryContract = artifacts.require('VehicleFactory');\nconst AdminRoleRegistry: AdminRoleRegistryContract = artifacts.require('AdminRoleRegistry');\nconst ManufacturerRoleRegistry: ManufacturerRoleRegistryContract = artifacts.require('ManufacturerRoleRegistry');\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { enabledFeatures, storeIpfsHash } = require('../../truffle-config.js'); // two dirs up, because it is compiled into ./dist/migrations\n\nmodule.exports = async (deployer: Truffle.Deployer, network: string, accounts: string[]) => {\n  if (enabledFeatures().includes('VEHICLE')) {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const uiDefinitions = require('../../contracts/vehicle/UIDefinitions.json');\n\n    const { factory } = await deployStateMachineSystem(\n      deployer,\n      accounts,\n      GateKeeper,\n      VehicleRegistry,\n      VehicleFactory,\n      [AdminRoleRegistry, ManufacturerRoleRegistry],\n      uiDefinitions,\n      storeIpfsHash\n    );\n\n    const Vehicles = [\n      {\n        vin: '5YJXCAE45GFF00001',\n        owner: '0xfd79b7a0b6f8e8ab147f3a38b0542b4d52538b0e',\n        mileage: 0,\n        type: 'Car',\n        plateNumber: '425382',\n        firstRegistrationDate: 1558362520,\n        make: 'Tesla',\n        model: 'Model X P90D',\n        channel: 'Broker',\n        origin: 'GCC',\n        GCCPlateNumber: 'I37921',\n      },\n      {\n        vin: '5YJRE1A31A1P01234',\n        owner: '0xa8ff056cffef6ffc662a069a69f3f3fdddb07902',\n        mileage: 10000,\n        type: 'Car',\n        plateNumber: '123054',\n        firstRegistrationDate: 1558062520,\n        make: 'Tesla',\n        model: 'Roadster',\n        channel: 'Agent',\n        origin: 'Other',\n      },\n    ];\n\n    for (const vehicle of Vehicles) {\n      await createVehicle(factory, vehicle);\n    }\n  }\n};\n\nasync function createVehicle(\n  factory: VehicleFactoryInstance,\n  vehicle: {\n    vin: string;\n    owner: string;\n    mileage: number;\n    type: string;\n    plateNumber: string;\n    firstRegistrationDate: number;\n    make: string;\n    model: string;\n    channel: string;\n    origin: string;\n    GCCPlateNumber?: string;\n  }\n) {\n  const ipfsHash = await storeIpfsJsonData({\n    type: vehicle.type,\n    plateNumber: vehicle.plateNumber,\n    firstRegistrationDate: vehicle.firstRegistrationDate,\n    make: vehicle.make,\n    model: vehicle.model,\n    channel: vehicle.channel,\n    origin: vehicle.origin,\n    GCCPlateNumber: vehicle.GCCPlateNumber,\n  });\n  await factory.create(vehicle.vin, vehicle.owner, vehicle.mileage, ipfsHash);\n}\n"]}