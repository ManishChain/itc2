{"version":3,"file":"17_deploy_generic.js","sourceRoot":"","sources":["../../migrations/17_deploy_generic.ts"],"names":[],"mappings":";;AAAA,+EAAiG;AAOjG,MAAM,UAAU,GAAuB,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AACvE,MAAM,eAAe,GAA4B,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;AACtF,MAAM,cAAc,GAA2B,SAAS,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACnF,MAAM,iBAAiB,GAA8B,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAE5F,8DAA8D;AAC9D,MAAM,EAAE,eAAe,EAAE,aAAa,EAAE,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC,6DAA6D;AAE5I,MAAM,CAAC,OAAO,GAAG,KAAK,EAAE,QAA0B,EAAE,OAAe,EAAE,QAAkB,EAAE,EAAE;IACzF,IAAI,eAAe,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;QACzC,8DAA8D;QAC9D,MAAM,aAAa,GAAG,OAAO,CAAC,wDAAwD,CAAC,CAAC;QAExF,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,iDAAwB,CAChD,QAAQ,EACR,QAAQ,EACR,UAAU,EACV,eAAe,EACf,cAAc,EACd,CAAC,iBAAiB,CAAC,EACnB,aAAa,EACb,aAAa,CACd,CAAC;QAEF,gCAAgC;QAChC,MAAM,QAAQ,GAAG;YACf;gBACE,MAAM,EAAE,GAAG;gBACX,MAAM,EAAE,4CAA4C;gBACpD,MAAM,EAAE,CAAC;gBACT,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,SAAS;gBAChB,YAAY,EAAE,UAAU;gBACxB,iBAAiB,EAAE,GAAG;aACvB;SACF,CAAC;QACF,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;YAC9B,MAAM,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;SACvC;KACF;AACH,CAAC,CAAC;AAEF,KAAK,UAAU,aAAa,CAC1B,OAA+B,EAC/B,OAQC;IAED,MAAM,QAAQ,GAAG,MAAM,0CAAiB,CAAC;QACvC,KAAK,EAAE,OAAO,CAAC,KAAK;QACpB,IAAI,EAAE,OAAO,CAAC,IAAI;QAClB,YAAY,EAAE,OAAO,CAAC,YAAY;QAClC,iBAAiB,EAAE,OAAO,CAAC,iBAAiB;KAC7C,CAAC,CAAC;IACH,MAAM,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AACjF,CAAC","sourcesContent":["import { deployStateMachineSystem, storeIpfsJsonData } from '@settlemint/enteth-migration-utils';\n\nimport { AdminRoleRegistryContract } from '../types/truffle-contracts/AdminRoleRegistry';\nimport { GateKeeperContract } from '../types/truffle-contracts/GateKeeper';\nimport { GenericFactoryContract, GenericFactoryInstance } from '../types/truffle-contracts/GenericFactory';\nimport { GenericRegistryContract } from '../types/truffle-contracts/GenericRegistry';\n\nconst GateKeeper: GateKeeperContract = artifacts.require('GateKeeper');\nconst GenericRegistry: GenericRegistryContract = artifacts.require('GenericRegistry');\nconst GenericFactory: GenericFactoryContract = artifacts.require('GenericFactory');\nconst AdminRoleRegistry: AdminRoleRegistryContract = artifacts.require('AdminRoleRegistry');\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { enabledFeatures, storeIpfsHash } = require('../../truffle-config.js'); // two dirs up, because it is compiled into ./dist/migrations\n\nmodule.exports = async (deployer: Truffle.Deployer, network: string, accounts: string[]) => {\n  if (enabledFeatures().includes('GENERIC')) {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const uiDefinitions = require('../../contracts/genericstatemachine/UIDefinitions.json');\n\n    const { factory } = await deployStateMachineSystem(\n      deployer,\n      accounts,\n      GateKeeper,\n      GenericRegistry,\n      GenericFactory,\n      [AdminRoleRegistry],\n      uiDefinitions,\n      storeIpfsHash\n    );\n\n    // Creation of a test generic SM\n    const Generics = [\n      {\n        param1: 'a',\n        param2: '0x3ad941908e73d2214d08237e90cfce11cd490c16',\n        param3: 0,\n        type: 'd',\n        place: 'Belgium',\n        creationDate: 1558362520,\n        optionalParameter: 'd',\n      },\n    ];\n    for (const generic of Generics) {\n      await createGeneric(factory, generic);\n    }\n  }\n};\n\nasync function createGeneric(\n  factory: GenericFactoryInstance,\n  generic: {\n    param1: string;\n    param2: string;\n    param3: number;\n    place: string;\n    creationDate: number;\n    type: string;\n    optionalParameter?: string;\n  }\n) {\n  const ipfsHash = await storeIpfsJsonData({\n    place: generic.place,\n    type: generic.type,\n    creationDate: generic.creationDate,\n    optionalParameter: generic.optionalParameter,\n  });\n  await factory.create(generic.param1, generic.param2, generic.param3, ipfsHash);\n}\n"]}