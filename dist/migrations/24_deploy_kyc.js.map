{"version":3,"file":"24_deploy_kyc.js","sourceRoot":"","sources":["../../migrations/24_deploy_kyc.ts"],"names":[],"mappings":"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","sourcesContent":["import { deployStateMachineSystem, storeIpfsJsonData } from '@settlemint/enteth-migration-utils';\nimport dayjs from 'dayjs';\n\nimport { AdminRoleRegistryContract } from '../types/truffle-contracts/AdminRoleRegistry';\nimport { GateKeeperContract } from '../types/truffle-contracts/GateKeeper';\nimport {\n  KnowYourCustomerFactoryContract,\n  KnowYourCustomerFactoryInstance,\n} from '../types/truffle-contracts/KnowYourCustomerFactory';\nimport { KnowYourCustomerRegistryContract } from '../types/truffle-contracts/KnowYourCustomerRegistry';\nimport { RequesterRoleRegistryContract } from '../types/truffle-contracts/RequesterRoleRegistry';\n\nconst GateKeeper: GateKeeperContract = artifacts.require('GateKeeper');\nconst KnowYourCustomerRegistry: KnowYourCustomerRegistryContract = artifacts.require('KnowYourCustomerRegistry');\nconst KnowYourCustomerFactory: KnowYourCustomerFactoryContract = artifacts.require('KnowYourCustomerFactory');\nconst AdminRoleRegistry: AdminRoleRegistryContract = artifacts.require('AdminRoleRegistry');\nconst RequesterRoleRegistry: RequesterRoleRegistryContract = artifacts.require('RequesterRoleRegistry');\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { enabledFeatures, storeIpfsHash } = require('../../truffle-config.js'); // two dirs up, because it is compiled into ./dist/migrations\n\nmodule.exports = async (deployer: Truffle.Deployer, network: string, accounts: string[]) => {\n  if (enabledFeatures().includes('KYC')) {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const uiDefinitions = require('../../contracts/knowyourcustomer/UIDefinitions.json');\n\n    const { factory } = await deployStateMachineSystem(\n      deployer,\n      accounts,\n      GateKeeper,\n      KnowYourCustomerRegistry,\n      KnowYourCustomerFactory,\n      [AdminRoleRegistry, RequesterRoleRegistry],\n      uiDefinitions,\n      storeIpfsHash\n    );\n\n    const KnowYourCustomers = [\n      {\n        Name: 'KYC-1',\n        gender: 'Male',\n        firstName: 'Thomas',\n        middleName: 'Neo',\n        lastName: 'Anderson',\n        fatherName: 'Matrix',\n        motherName: 'Reloaded',\n        dateOfBirth: dayjs('1919-04-08').unix(),\n        city: 'Delhi',\n        addressLine1: 'Zion',\n        addressLine2: 'Mainframe',\n        addressLine3: 'Computer',\n        pincode: `4000 m3`,\n        miscInfo: '',\n        birthCertificate: 'QmfNo67h6XGX162cwSSgBXVdxh6TqJDM42nrWxrCLYadMd',\n        PAN: 'QmUF8Ehv5REwdJSE64Cp379vRhnVqH7yxUE67vhxUVmevT',\n        DL: 'QmV5XciCpvSx51JjavfKj9PYp9dBsLAXGziSheh34qUDA9',\n        ADHAAR: 'Qmbm8KEr6CnqUGv6wFsN6SPSx1bb4gz2reMfmwXHtjGPTz',\n        passport: 'QmSYpE8cSn52n9N965n61DFPC3SPTRr8q5uiwaPSYAQqXb',\n      },\n    ];\n    for (const KnowYourCustomer of KnowYourCustomers) {\n      await createKnowYourCustomer(factory, KnowYourCustomer);\n    }\n  }\n};\n\nasync function createKnowYourCustomer(\n  factory: KnowYourCustomerFactoryInstance,\n  KnowYourCustomer: {\n    Name: string;\n    gender: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    fatherName: string;\n    motherName: string;\n    dateOfBirth: number;\n    city: string;\n    addressLine1: string;\n    addressLine2: string;\n    addressLine3: string;\n    pincode: string;\n    miscInfo: string;\n    birthCertificate: string;\n    PAN: string;\n    DL: string;\n    ADHAAR: string;\n    passport: string;\n  }\n) {\n  const ipfsHash = await storeIpfsJsonData({\n    gender: KnowYourCustomer.gender,\n    firstName: KnowYourCustomer.firstName,\n    middleName: KnowYourCustomer.middleName,\n    lastName: KnowYourCustomer.lastName,\n    fatherName: KnowYourCustomer.fatherName,\n    motherName: KnowYourCustomer.motherName,\n    dateOfBirth: KnowYourCustomer.dateOfBirth,\n    city: KnowYourCustomer.city,\n    addressLine1: KnowYourCustomer.addressLine1,\n    addressLine2: KnowYourCustomer.addressLine2,\n    addressLine3: KnowYourCustomer.addressLine3,\n    pincode: KnowYourCustomer.pincode,\n    miscInfo: KnowYourCustomer.miscInfo,\n    birthCertificate: KnowYourCustomer.birthCertificate,\n    PAN: KnowYourCustomer.PAN,\n    DL: KnowYourCustomer.DL,\n    ADHAAR: KnowYourCustomer.ADHAAR,\n    passport: KnowYourCustomer.passport,\n  });\n  await factory.create(KnowYourCustomer.Name, ipfsHash);\n}\n"]}