{"version":3,"file":"9_deploy_currency.js","sourceRoot":"","sources":["../../migrations/9_deploy_currency.ts"],"names":[],"mappings":";;AAAA,+EAA4E;AAS5E,MAAM,UAAU,GAAuB,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AACvE,MAAM,QAAQ,GAAqB,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AACjE,MAAM,eAAe,GAA4B,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;AACtF,MAAM,gBAAgB,GAA6B,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACzF,MAAM,iBAAiB,GAA8B,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAC5F,MAAM,gBAAgB,GAA6B,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAEzF,8DAA8D;AAC9D,MAAM,EAAE,eAAe,EAAE,aAAa,EAAE,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC,6DAA6D;AAC5I,MAAM,KAAK,GAAG,CAAC,QAAkB,EAAE,EAAE,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,CAAC,OAAe,EAAE,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;AAE9G,MAAM,CAAC,OAAO,GAAG,KAAK,EAAE,QAA0B,EAAE,OAAe,EAAE,QAAkB,EAAE,EAAE;IACzF,IAAI,KAAK,CAAC,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,EAAE;QAChC,MAAM,WAAW,GAAG,MAAM,UAAU,CAAC,QAAQ,EAAE,CAAC;QAEhD,8DAA8D;QAC9D,MAAM,aAAa,GAAG,OAAO,CAAC,6CAA6C,CAAC,CAAC;QAC7E,MAAM,+CAAsB,CAC1B;YACE,UAAU,EAAE,WAAW;YACvB,QAAQ,EAAE,EAAE,QAAQ,EAAE,gBAAgB,EAAE,WAAW,EAAE,EAAE,EAAE;YACzD,OAAO,EAAE,EAAE,QAAQ,EAAE,eAAe,EAAE,WAAW,EAAE,EAAE,EAAE;YACvD,KAAK,EAAE;gBACL,QAAQ,EAAE,QAAQ;gBAClB,SAAS,EAAE;oBACT;wBACE,IAAI,EAAE,MAAM;wBACZ,QAAQ,EAAE,CAAC;wBACX,WAAW,EAAE,EAAE;wBACf,QAAQ,EAAE;4BACR;gCACE,eAAe,EAAE,CAAC,iBAAiB,EAAE,gBAAgB,CAAC;gCACtD,MAAM,EAAE,KAAK;6BACd;yBACF;qBACF;oBACD;wBACE,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE,CAAC;wBACX,WAAW,EAAE,EAAE;wBACf,QAAQ,EAAE;4BACR;gCACE,eAAe,EAAE,CAAC,iBAAiB,EAAE,gBAAgB,CAAC;gCACtD,MAAM,EAAE,IAAI;6BACb;yBACF;qBACF;iBACF;aACF;YACD,KAAK,EAAE,CAAC,iBAAiB,CAAC;SAC3B,EACD,QAAQ,CAAC,CAAC,CAAC,EACX,aAAa,EACb,QAAQ,EACR,aAAa,CACd,CAAC;KACH;AACH,CAAC,CAAC","sourcesContent":["import { deployERC20TokenSystem } from '@settlemint/enteth-migration-utils';\n\nimport { AdminRoleRegistryContract } from '../types/truffle-contracts/AdminRoleRegistry';\nimport { CurrencyContract } from '../types/truffle-contracts/Currency';\nimport { CurrencyFactoryContract } from '../types/truffle-contracts/CurrencyFactory';\nimport { CurrencyRegistryContract } from '../types/truffle-contracts/CurrencyRegistry';\nimport { GateKeeperContract } from '../types/truffle-contracts/GateKeeper';\nimport { UserRoleRegistryContract } from '../types/truffle-contracts/UserRoleRegistry';\n\nconst GateKeeper: GateKeeperContract = artifacts.require('GateKeeper');\nconst Currency: CurrencyContract = artifacts.require('Currency');\nconst CurrencyFactory: CurrencyFactoryContract = artifacts.require('CurrencyFactory');\nconst CurrencyRegistry: CurrencyRegistryContract = artifacts.require('CurrencyRegistry');\nconst AdminRoleRegistry: AdminRoleRegistryContract = artifacts.require('AdminRoleRegistry');\nconst UserRoleRegistry: UserRoleRegistryContract = artifacts.require('UserRoleRegistry');\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { enabledFeatures, storeIpfsHash } = require('../../truffle-config.js'); // two dirs up, because it is compiled into ./dist/migrations\nconst found = (features: string[]) => enabledFeatures().some((feature: string) => features.includes(feature));\n\nmodule.exports = async (deployer: Truffle.Deployer, network: string, accounts: string[]) => {\n  if (found(['CURRENCY', 'BONDS'])) {\n    const dGateKeeper = await GateKeeper.deployed();\n\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const uiDefinitions = require('../../contracts/currency/UIDefinitions.json');\n    await deployERC20TokenSystem(\n      {\n        gatekeeper: dGateKeeper,\n        registry: { contract: CurrencyRegistry, extraParams: [] },\n        factory: { contract: CurrencyFactory, extraParams: [] },\n        token: {\n          contract: Currency,\n          instances: [\n            {\n              name: 'Euro',\n              decimals: 2,\n              extraParams: [],\n              issuance: [\n                {\n                  recipientGroups: [AdminRoleRegistry, UserRoleRegistry],\n                  amount: 10000,\n                },\n              ],\n            },\n            {\n              name: 'Dollar',\n              decimals: 2,\n              extraParams: [],\n              issuance: [\n                {\n                  recipientGroups: [AdminRoleRegistry, UserRoleRegistry],\n                  amount: 5000,\n                },\n              ],\n            },\n          ],\n        },\n        roles: [AdminRoleRegistry],\n      },\n      accounts[0],\n      uiDefinitions,\n      deployer,\n      storeIpfsHash\n    );\n  }\n};\n"]}