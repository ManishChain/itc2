{"version":3,"file":"21_deploy_supplypackage.js","sourceRoot":"","sources":["../../migrations/21_deploy_supplypackage.ts"],"names":[],"mappings":"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","sourcesContent":["import { deployFiniteStateMachineSystem, storeIpfsJsonData } from '@settlemint/enteth-migration-utils';\n\nimport {\n  AdminRoleRegistryContract,\n  GateKeeperContract,\n  PackageContract,\n  PackageInstance,\n  PackageRegistryContract,\n} from '../types/truffle-contracts';\n\nconst GateKeeper: GateKeeperContract = artifacts.require('GateKeeper');\n\nconst PackageRegistry: PackageRegistryContract = artifacts.require('PackageRegistry');\nconst Package: PackageContract = artifacts.require('Package');\n\nconst AdminRoleRegistry: AdminRoleRegistryContract = artifacts.require('AdminRoleRegistry');\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { enabledFeatures } = require('../../truffle-config.js'); // two dirs up, because it is compiled into ./dist/migrations\n\nmodule.exports = async (deployer: Truffle.Deployer, network: string, accounts: string[]) => {\n  if (enabledFeatures().includes('SUPPLYPACKAGE')) {\n    await deployFiniteStateMachineSystem(deployer, accounts, GateKeeper, Package, PackageRegistry, [AdminRoleRegistry]);\n\n    const dGateKeeper = await GateKeeper.deployed();\n    const dPackage = await Package.deployed();\n\n    const allRoles = await dPackage.allRoles();\n    for (const role of allRoles) {\n      await dGateKeeper.createPermission(accounts[0], dPackage.address, role, accounts[0]);\n    }\n    const packages = [\n      {\n        name: 'FPP2 masks',\n        comment: 'Maskers voor COVID-19 bestrijding',\n        isMedical: true,\n        tiltable: true,\n        temperatureIgnored: true,\n        temperatureThreshold: 0,\n      },\n      {\n        name: 'Curry Ketchup',\n        comment: 'Delhaize Curry Ketchup',\n        isMedical: false,\n        tiltable: true,\n        temperatureIgnored: false,\n        temperatureThreshold: 4,\n      },\n    ];\n\n    for (const apackage of packages) {\n      await createPackage(dPackage, apackage, accounts[0]);\n    }\n  }\n};\n\nasync function createPackage(packageInstance: PackageInstance, packageData: IPackageData, owner: string) {\n  const ipfsHash = await storeIpfsJsonData({\n    name: packageData.name,\n    comment: packageData.comment,\n    isMedical: packageData.isMedical,\n    tiltable: packageData.tiltable,\n    temperatureIgnored: packageData.temperatureIgnored,\n    temperatureThreshold: packageData.temperatureThreshold,\n  });\n  // Hiervoor evt Contract nog aanpassen\n  await (packageInstance.create(\n    packageData.name,\n    packageData.comment,\n    packageData.isMedical,\n    packageData.tiltable,\n    packageData.temperatureIgnored,\n    packageData.temperatureThreshold,\n    ipfsHash,\n    owner\n  ) as any)\n    .on('transactionHash', (hash: string) => {\n      console.log(`Creating package ${packageData.name}: ${hash}`);\n    })\n    .on('receipt', (receipt: any) => console.log(`Success!`));\n}\n\ninterface IPackageData {\n  name: string;\n  comment: string;\n  isMedical: boolean;\n  tiltable: boolean;\n  temperatureIgnored: boolean;\n  temperatureThreshold: number;\n}\n"]}