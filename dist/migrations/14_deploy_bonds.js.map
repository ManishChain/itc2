{"version":3,"file":"14_deploy_bonds.js","sourceRoot":"","sources":["../../migrations/14_deploy_bonds.ts"],"names":[],"mappings":"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","sourcesContent":["import { createPermission, getNewAddressFromEvents, grantPermission } from '@settlemint/enteth-migration-utils';\nimport dayjs from 'dayjs';\nimport faker from 'faker';\n\nimport { BondContract } from '../types/truffle-contracts/Bond';\nimport { BondFactoryContract } from '../types/truffle-contracts/BondFactory';\nimport { BondRegistryContract } from '../types/truffle-contracts/BondRegistry';\nimport { CurrencyRegistryContract } from '../types/truffle-contracts/CurrencyRegistry';\nimport { GateKeeperContract } from '../types/truffle-contracts/GateKeeper';\n\nconst BondFactory: BondFactoryContract = artifacts.require('BondFactory');\nconst BondRegistry: BondRegistryContract = artifacts.require('BondRegistry');\nconst GateKeeper: GateKeeperContract = artifacts.require('GateKeeper');\nconst CurrencyRegistry: CurrencyRegistryContract = artifacts.require('CurrencyRegistry');\nconst Bond: BondContract = artifacts.require('Bond');\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { storeIpfsHash, enabledFeatures } = require('../../truffle-config.js');\n\nmodule.exports = async (deployer: Truffle.Deployer, network: string, accounts: string[]) => {\n  if (enabledFeatures().includes('BONDS')) {\n    const gateKeeper = await GateKeeper.deployed();\n    const currencyRegistry = await CurrencyRegistry.deployed();\n    const currencies: Array<{ value: string; label: string }> = [];\n    const currencyLength = await currencyRegistry.getIndexLength();\n    for (let i = 0; i < currencyLength.toNumber(); i++) {\n      const currency = await currencyRegistry.getByIndex(i);\n      currencies.push({ value: currency[1], label: currency[0] });\n    }\n    // Bonds\n    await deployer.deploy(BondRegistry, gateKeeper.address);\n    const bondRegistry = await BondRegistry.deployed();\n    await createPermission(gateKeeper, bondRegistry, 'LIST_TOKEN_ROLE', accounts[0], accounts[0]);\n    await deployer.deploy(BondFactory, bondRegistry.address, gateKeeper.address);\n    const bondFactory = await BondFactory.deployed();\n    await createPermission(gateKeeper, bondFactory, 'CREATE_TOKEN_ROLE', accounts[0], accounts[0]);\n    await grantPermission(gateKeeper, bondRegistry, 'LIST_TOKEN_ROLE', bondFactory.address);\n    await grantPermission(gateKeeper, gateKeeper, 'CREATE_PERMISSIONS_ROLE', bondFactory.address);\n    await createPermission(gateKeeper, bondFactory, 'UPDATE_UIFIELDDEFINITIONS_ROLE', accounts[0], accounts[0]);\n    // two dirs up, because it is compiled into ./dist/migrations\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const uiDefinitions = require('../../contracts/bonds/UIDefinitions.json');\n    uiDefinitions.selectFields.parCurrency = currencies;\n    const hash = await storeIpfsHash(uiDefinitions);\n    await bondFactory.setUIFieldDefinitionsHash(hash);\n\n    for (let i = 0; i < 10; i++) {\n      const name = faker.company.companyName();\n      const decimals = 2;\n      const duration = i % 2 ? 24 : 60;\n      const period = i % 2 ? 6 : 12;\n      const periodString = i % 2 ? 'SEMI' : 'ANN';\n      const interest = parseInt(faker.finance.amount(1, 12, 0), 10);\n      const issuanceDate = i < 5 ? dayjs().subtract(3, 'year').add(i, 'month') : dayjs().add(i, 'month');\n      const ipfsHash = await storeIpfsHash({\n        isin: faker.finance.iban(),\n        issuer: name,\n      });\n\n      const tx = await bondFactory.createToken(\n        `BOND ${interest}% ${issuanceDate.add(duration * 4, 'week').format('YY-MM-DD')} ${periodString}`,\n        10 ** decimals * (parseInt(faker.finance.amount(5, 100, 0), 10) * 100),\n        currencies[0].value,\n        duration,\n        interest,\n        period,\n        decimals,\n        ipfsHash\n      );\n      const bondAddress = getNewAddressFromEvents(tx, 'TokenCreated');\n      // tslint:disable-next-line: no-any\n      const bond = await Bond.at(bondAddress);\n      await bond.setIssuanceDate(issuanceDate.unix());\n      if (issuanceDate.isBefore(dayjs())) {\n        await bond.launch(issuanceDate.add(1, 'day').unix());\n      }\n      await bond.mint(accounts[0], 10 ** decimals * faker.random.number(1000));\n    }\n  }\n};\n"]}