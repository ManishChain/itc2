{"version":3,"file":"12_deploy_billoflading.js","sourceRoot":"","sources":["../../migrations/12_deploy_billoflading.ts"],"names":[],"mappings":";;;;;AAAA,+EAAoF;AACpF,kDAA0B;AAQ1B,MAAM,UAAU,GAAuB,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AAEvE,eAAe;AACf,MAAM,oBAAoB,GAAiC,SAAS,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;AACrG,MAAM,YAAY,GAAyB,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AAC7E,MAAM,iBAAiB,GAA8B,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAC5F,MAAM,gBAAgB,GAA6B,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAEzF,8DAA8D;AAC9D,MAAM,EAAE,aAAa,EAAE,eAAe,EAAE,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC,6DAA6D;AAE5I,MAAM,CAAC,OAAO,GAAG,KAAK,EAAE,QAA0B,EAAE,OAAe,EAAE,QAAkB,EAAE,EAAE;IACzF,IAAI,eAAe,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;QAC9C,8DAA8D;QAC9D,MAAM,aAAa,GAAG,OAAO,CAAC,iDAAiD,CAAC,CAAC;QACjF,MAAM,uDAA8B,CAClC,QAAQ,EACR,QAAQ,EACR,UAAU,EACV,YAAY,EACZ,oBAAoB,EACpB,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,EACrC,aAAa,CACd,CAAC;QACF,MAAM,aAAa,GAAG,MAAM,YAAY,CAAC,QAAQ,EAAE,CAAC;QAEpD,MAAM,WAAW,GAAG,MAAM,UAAU,CAAC,QAAQ,EAAE,CAAC;QAChD,MAAM,QAAQ,GAAG,MAAM,aAAa,CAAC,QAAQ,EAAE,CAAC;QAChD,KAAK,MAAM,IAAI,IAAI,QAAQ,EAAE;YAC3B,MAAM,WAAW,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3F;QAED,MAAM,aAAa,GAAG;YACpB;gBACE,UAAU,EAAE,UAAU;gBACtB,IAAI,EAAE,0BAA0B;gBAChC,EAAE,EAAE,SAAS;gBACb,OAAO,EAAE,4CAA4C;gBACrD,YAAY,EAAE,WAAW;gBACzB,iBAAiB,EAAE,SAAS;gBAC5B,aAAa,EAAE,eAAK,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE;gBACzC,WAAW,EAAE,MAAM;gBACnB,YAAY,EAAE,aAAa;gBAC3B,YAAY,EAAE,IAAI;gBAClB,aAAa,EAAE,UAAU;gBACzB,WAAW,EAAE,SAAS;gBACtB,iBAAiB,EAAE,EAAE;gBACrB,iBAAiB,EAAE,gDAAgD;gBACnE,aAAa,EAAE,gDAAgD;gBAC/D,mBAAmB,EAAE,gDAAgD;gBACrE,mBAAmB,EAAE,gDAAgD;gBACrE,kBAAkB,EAAE,gDAAgD;aACrE;SACF,CAAC;QACF,KAAK,MAAM,YAAY,IAAI,aAAa,EAAE;YACxC,MAAM,kBAAkB,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;SACvD;KACF;AACH,CAAC,CAAC;AAEF,KAAK,UAAU,kBAAkB,CAAC,oBAA0C,EAAE,gBAAmC;IAC/G,MAAM,QAAQ,GAAG,MAAM,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC,iFAAiF;IAEzI,MAAM,oBAAoB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC9C,CAAC","sourcesContent":["import { deployFiniteStateMachineSystem } from '@settlemint/enteth-migration-utils';\nimport dayjs from 'dayjs';\n\nimport { AdminRoleRegistryContract } from '../types/truffle-contracts/AdminRoleRegistry';\nimport { BillOfLadingContract, BillOfLadingInstance } from '../types/truffle-contracts/BillOfLading';\nimport { BillOfLadingRegistryContract } from '../types/truffle-contracts/BillOfLadingRegistry';\nimport { GateKeeperContract } from '../types/truffle-contracts/GateKeeper';\nimport { UserRoleRegistryContract } from '../types/truffle-contracts/UserRoleRegistry';\n\nconst GateKeeper: GateKeeperContract = artifacts.require('GateKeeper');\n\n// BillOfLading\nconst BillOfLadingRegistry: BillOfLadingRegistryContract = artifacts.require('BillOfLadingRegistry');\nconst BillOfLading: BillOfLadingContract = artifacts.require('BillOfLading');\nconst AdminRoleRegistry: AdminRoleRegistryContract = artifacts.require('AdminRoleRegistry');\nconst UserRoleRegistry: UserRoleRegistryContract = artifacts.require('UserRoleRegistry');\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { storeIpfsHash, enabledFeatures } = require('../../truffle-config.js'); // two dirs up, because it is compiled into ./dist/migrations\n\nmodule.exports = async (deployer: Truffle.Deployer, network: string, accounts: string[]) => {\n  if (enabledFeatures().includes('BILLOFLADING')) {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const uiDefinitions = require('../../contracts/billoflading/UIDefinitions.json');\n    await deployFiniteStateMachineSystem(\n      deployer,\n      accounts,\n      GateKeeper,\n      BillOfLading,\n      BillOfLadingRegistry,\n      [AdminRoleRegistry, UserRoleRegistry],\n      uiDefinitions\n    );\n    const dBillOfLading = await BillOfLading.deployed();\n\n    const dGateKeeper = await GateKeeper.deployed();\n    const allRoles = await dBillOfLading.allRoles();\n    for (const role of allRoles) {\n      await dGateKeeper.createPermission(accounts[0], dBillOfLading.address, role, accounts[0]);\n    }\n\n    const billofladings = [\n      {\n        typeOfBill: 'straight',\n        from: 'Wilmar International Ltd',\n        to: 'Cargill',\n        carrier: '0xe1a42ac93ac8f449c0b4191770e9ce521a999bad',\n        portOfOrigin: 'Singapore',\n        portOfDestination: 'Antwerp',\n        dateOfLoading: dayjs('2019-06-24').unix(),\n        typeOfGoods: 'bulk',\n        valueOfGoods: '3000000 SDG',\n        countOfGoods: `20`,\n        weightOfGoods: `34000 kg`,\n        sizeOfGoods: `4000 m3`,\n        specialConditions: '',\n        commercialInvoice: 'QmfNo67h6XGX162cwSSgBXVdxh6TqJDM42nrWxrCLYadMd',\n        packagingList: 'QmUF8Ehv5REwdJSE64Cp379vRhnVqH7yxUE67vhxUVmevT',\n        certificateOfOrigin: 'QmV5XciCpvSx51JjavfKj9PYp9dBsLAXGziSheh34qUDA9',\n        letterOfInstruction: 'Qmbm8KEr6CnqUGv6wFsN6SPSx1bb4gz2reMfmwXHtjGPTz',\n        dangerousGoodsForm: 'QmSYpE8cSn52n9N965n61DFPC3SPTRr8q5uiwaPSYAQqXb',\n      },\n    ];\n    for (const billoflading of billofladings) {\n      await createBillOfLading(dBillOfLading, billoflading);\n    }\n  }\n};\n\nasync function createBillOfLading(billofladingInstance: BillOfLadingInstance, billofladingData: IBillOfLadingData) {\n  const ipfsHash = await storeIpfsHash(billofladingData); // warning, this only works because there are no fields not part of the ipfs data\n\n  await billofladingInstance.create(ipfsHash);\n}\n\ninterface IBillOfLadingData {\n  typeOfBill: string;\n  from: string;\n  to: string;\n  carrier: string;\n  portOfOrigin: string;\n  portOfDestination: string;\n  dateOfLoading: number;\n  typeOfGoods: string;\n  valueOfGoods: string;\n  countOfGoods: string;\n  weightOfGoods: string;\n  sizeOfGoods: string;\n  specialConditions: string;\n  commercialInvoice: string;\n  packagingList: string;\n  certificateOfOrigin: string;\n  letterOfInstruction: string;\n  dangerousGoodsForm: string;\n}\n"]}