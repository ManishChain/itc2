{"version":3,"file":"16_deploy_orders.js","sourceRoot":"","sources":["../../migrations/16_deploy_orders.ts"],"names":[],"mappings":"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","sourcesContent":["import { deployFiniteStateMachineSystem } from '@settlemint/enteth-migration-utils';\n\nimport { AdminRoleRegistryContract } from '../types/truffle-contracts/AdminRoleRegistry';\nimport { BusinessUnitRoleRegistryContract } from '../types/truffle-contracts/BusinessUnitRoleRegistry';\nimport { GateKeeperContract } from '../types/truffle-contracts/GateKeeper';\nimport { OrdersContract, OrdersInstance } from '../types/truffle-contracts/Orders';\nimport { OrdersRegistryContract } from '../types/truffle-contracts/OrdersRegistry';\n\nconst GateKeeper: GateKeeperContract = artifacts.require('GateKeeper');\n\n// Orders\nconst OrdersRegistry: OrdersRegistryContract = artifacts.require('OrdersRegistry');\n\nconst Orders: OrdersContract = artifacts.require('Orders');\n\nconst AdminRoleRegistry: AdminRoleRegistryContract = artifacts.require('AdminRoleRegistry');\nconst BusinessUnitRoleRegistry: BusinessUnitRoleRegistryContract = artifacts.require('BusinessUnitRoleRegistry');\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { enabledFeatures, storeIpfsHash } = require('../../truffle-config.js'); // two dirs up, because it is compiled into ./dist/migrations\n\nmodule.exports = async (deployer: Truffle.Deployer, network: string, accounts: string[]) => {\n  if (enabledFeatures().includes('ORDERS')) {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const uiDefinitions = require('../../contracts/orders/UIDefinitions.json');\n    await deployFiniteStateMachineSystem(\n      deployer,\n      accounts,\n      GateKeeper,\n      Orders,\n      OrdersRegistry,\n      [AdminRoleRegistry, BusinessUnitRoleRegistry],\n      uiDefinitions\n    );\n    const dOrders = await Orders.deployed();\n\n    const dGateKeeper = await GateKeeper.deployed();\n    const allRoles = await dOrders.allRoles();\n    for (const role of allRoles) {\n      await dGateKeeper.createPermission(accounts[0], dOrders.address, role, accounts[0]);\n    }\n\n    const businessUnitRoleRegistry = await BusinessUnitRoleRegistry.deployed();\n    const businessunits = await businessUnitRoleRegistry.getRoleHolders();\n\n    const Orderss: IOrdersData[] = [\n      {\n        businessUnit: businessunits[0],\n        InBoneChickenPerKg: 400,\n        WokForTwoPerPackage: 200,\n        FreeRangeChickenPerChicken: 34444,\n        PastaSaladPerPackage: 10,\n      },\n      {\n        businessUnit: businessunits[0],\n        InBoneChickenPerKg: 40,\n        WokForTwoPerPackage: 20,\n        FreeRangeChickenPerChicken: 344,\n        PastaSaladPerPackage: 1,\n      },\n      {\n        businessUnit: businessunits[1],\n        InBoneChickenPerKg: 0,\n        WokForTwoPerPackage: 20000,\n        FreeRangeChickenPerChicken: 344444,\n        PastaSaladPerPackage: 1000,\n      },\n      {\n        businessUnit: businessunits[0],\n        InBoneChickenPerKg: 678,\n        WokForTwoPerPackage: 901,\n        FreeRangeChickenPerChicken: 2345,\n        PastaSaladPerPackage: 6789,\n      },\n    ];\n    for (const order of Orderss) {\n      await createOrders(dOrders, order);\n    }\n  }\n};\n\nasync function createOrders(ordersInstance: OrdersInstance, OrdersData: IOrdersData) {\n  const ipfsHash = await storeIpfsHash({});\n\n  await ordersInstance.create(\n    OrdersData.businessUnit,\n    OrdersData.InBoneChickenPerKg,\n    OrdersData.WokForTwoPerPackage,\n    OrdersData.FreeRangeChickenPerChicken,\n    OrdersData.PastaSaladPerPackage,\n    ipfsHash\n  );\n}\n\ninterface IOrdersData {\n  businessUnit: string;\n  InBoneChickenPerKg: number;\n  WokForTwoPerPackage: number;\n  FreeRangeChickenPerChicken: number;\n  PastaSaladPerPackage: number;\n}\n"]}