{"version":3,"file":"8_deploy_shares.js","sourceRoot":"","sources":["../../migrations/8_deploy_shares.ts"],"names":[],"mappings":";;AAAA,+EAA4E;AAS5E,MAAM,UAAU,GAAuB,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AACvE,MAAM,KAAK,GAAkB,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACxD,MAAM,YAAY,GAAyB,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AAC7E,MAAM,aAAa,GAA0B,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;AAChF,MAAM,iBAAiB,GAA8B,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAC5F,MAAM,gBAAgB,GAA6B,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAEzF,8DAA8D;AAC9D,MAAM,EAAE,eAAe,EAAE,aAAa,EAAE,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC,6DAA6D;AAE5I,MAAM,CAAC,OAAO,GAAG,KAAK,EAAE,QAA0B,EAAE,OAAe,EAAE,QAAkB,EAAE,EAAE;IACzF,IAAI,eAAe,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;QACxC,MAAM,WAAW,GAAG,MAAM,UAAU,CAAC,QAAQ,EAAE,CAAC;QAEhD,8DAA8D;QAC9D,MAAM,aAAa,GAAG,OAAO,CAAC,0CAA0C,CAAC,CAAC;QAC1E,MAAM,+CAAsB,CAC1B;YACE,UAAU,EAAE,WAAW;YACvB,QAAQ,EAAE,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,EAAE,EAAE;YACtD,OAAO,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,WAAW,EAAE,EAAE,EAAE;YACpD,KAAK,EAAE;gBACL,QAAQ,EAAE,KAAK;gBACf,SAAS,EAAE;oBACT;wBACE,IAAI,EAAE,OAAO;wBACb,QAAQ,EAAE,CAAC;wBACX,WAAW,EAAE,EAAE;wBACf,QAAQ,EAAE;4BACR;gCACE,eAAe,EAAE,CAAC,iBAAiB,EAAE,gBAAgB,CAAC;gCACtD,MAAM,EAAE,IAAI;6BACb;yBACF;qBACF;iBACF;aACF;YACD,KAAK,EAAE,CAAC,iBAAiB,CAAC;SAC3B,EACD,QAAQ,CAAC,CAAC,CAAC,EACX,aAAa,EACb,QAAQ,EACR,aAAa,CACd,CAAC;KACH;AACH,CAAC,CAAC","sourcesContent":["import { deployERC20TokenSystem } from '@settlemint/enteth-migration-utils';\n\nimport { AdminRoleRegistryContract } from '../types/truffle-contracts/AdminRoleRegistry';\nimport { GateKeeperContract } from '../types/truffle-contracts/GateKeeper';\nimport { ShareContract } from '../types/truffle-contracts/Share';\nimport { ShareFactoryContract } from '../types/truffle-contracts/ShareFactory';\nimport { ShareRegistryContract } from '../types/truffle-contracts/ShareRegistry';\nimport { UserRoleRegistryContract } from '../types/truffle-contracts/UserRoleRegistry';\n\nconst GateKeeper: GateKeeperContract = artifacts.require('GateKeeper');\nconst Share: ShareContract = artifacts.require('Share');\nconst ShareFactory: ShareFactoryContract = artifacts.require('ShareFactory');\nconst ShareRegistry: ShareRegistryContract = artifacts.require('ShareRegistry');\nconst AdminRoleRegistry: AdminRoleRegistryContract = artifacts.require('AdminRoleRegistry');\nconst UserRoleRegistry: UserRoleRegistryContract = artifacts.require('UserRoleRegistry');\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { enabledFeatures, storeIpfsHash } = require('../../truffle-config.js'); // two dirs up, because it is compiled into ./dist/migrations\n\nmodule.exports = async (deployer: Truffle.Deployer, network: string, accounts: string[]) => {\n  if (enabledFeatures().includes('SHARES')) {\n    const dGateKeeper = await GateKeeper.deployed();\n\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const uiDefinitions = require('../../contracts/share/UIDefinitions.json');\n    await deployERC20TokenSystem(\n      {\n        gatekeeper: dGateKeeper,\n        registry: { contract: ShareRegistry, extraParams: [] },\n        factory: { contract: ShareFactory, extraParams: [] },\n        token: {\n          contract: Share,\n          instances: [\n            {\n              name: 'Apple',\n              decimals: 2,\n              extraParams: [],\n              issuance: [\n                {\n                  recipientGroups: [AdminRoleRegistry, UserRoleRegistry],\n                  amount: 4500,\n                },\n              ],\n            },\n          ],\n        },\n        roles: [AdminRoleRegistry],\n      },\n      accounts[0],\n      uiDefinitions,\n      deployer,\n      storeIpfsHash\n    );\n  }\n};\n"]}