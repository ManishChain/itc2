{"version":3,"file":"5_deploy_drugpackage.js","sourceRoot":"","sources":["../../migrations/5_deploy_drugpackage.ts"],"names":[],"mappings":";;;;;AAAA,+EAA8E;AAC9E,kDAA0B;AAQ1B,MAAM,UAAU,GAAuB,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AACvE,MAAM,mBAAmB,GAAgC,SAAS,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAClG,MAAM,kBAAkB,GAA+B,SAAS,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAC/F,MAAM,iBAAiB,GAA8B,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAC5F,MAAM,wBAAwB,GAAqC,SAAS,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;AAEjH,8DAA8D;AAC9D,MAAM,EAAE,eAAe,EAAE,aAAa,EAAE,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC,6DAA6D;AAE5I,MAAM,CAAC,OAAO,GAAG,KAAK,EAAE,QAA0B,EAAE,OAAe,EAAE,QAAkB,EAAE,EAAE;IACzF,IAAI,eAAe,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;QAC7C,8DAA8D;QAC9D,MAAM,aAAa,GAAG,OAAO,CAAC,gDAAgD,CAAC,CAAC;QAEhF,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,iDAAwB,CAChD,QAAQ,EACR,QAAQ,EACR,UAAU,EACV,mBAAmB,EACnB,kBAAkB,EAClB,CAAC,iBAAiB,EAAE,wBAAwB,CAAC,EAC7C,aAAa,CACd,CAAC;QAEF,MAAM,YAAY,GAAG;YACnB;gBACE,YAAY,EAAE,OAAO;gBACrB,WAAW,EAAE,KAAK;gBAClB,WAAW,EAAE,IAAI;gBACjB,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,UAAU;gBAChB,UAAU,EAAE,WAAW;gBACvB,QAAQ,EAAE,mBAAmB;gBAC7B,iBAAiB,EAAE,eAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE;gBACtD,aAAa,EAAE,gDAAgD;aAChE;YACD;gBACE,YAAY,EAAE,OAAO;gBACrB,WAAW,EAAE,MAAM;gBACnB,WAAW,EAAE,IAAI;gBACjB,IAAI,EAAE,yBAAyB;gBAC/B,IAAI,EAAE,SAAS;gBACf,UAAU,EAAE,QAAQ;gBACpB,QAAQ,EAAE,kCAAkC;gBAC5C,eAAe,EAAE,mBAAmB;gBACpC,iBAAiB,EAAE,eAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,IAAI,EAAE;gBACrD,aAAa,EAAE,gDAAgD;aAChE;SACF,CAAC;QAEF,KAAK,MAAM,WAAW,IAAI,YAAY,EAAE;YACtC,MAAM,iBAAiB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;SAC/C;KACF;AACH,CAAC,CAAC;AAEF,KAAK,UAAU,iBAAiB,CAC9B,OAAmC,EACnC,WAWC;IAED,MAAM,QAAQ,GAAG,MAAM,aAAa,CAAC;QACnC,IAAI,EAAE,WAAW,CAAC,IAAI;QACtB,IAAI,EAAE,WAAW,CAAC,IAAI;QACtB,UAAU,EAAE,WAAW,CAAC,UAAU;QAClC,QAAQ,EAAE,WAAW,CAAC,QAAQ;QAC9B,eAAe,EAAE,WAAW,CAAC,eAAe;QAC5C,iBAAiB,EAAE,WAAW,CAAC,iBAAiB;QAChD,aAAa,EAAE,WAAW,CAAC,aAAa;KACzC,CAAC,CAAC;IACH,MAAM,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,YAAY,EAAE,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;AAC7G,CAAC","sourcesContent":["import { deployStateMachineSystem } from '@settlemint/enteth-migration-utils';\nimport dayjs from 'dayjs';\n\nimport { AdminRoleRegistryContract } from '../types/truffle-contracts/AdminRoleRegistry';\nimport { DrugPackageFactoryContract, DrugPackageFactoryInstance } from '../types/truffle-contracts/DrugPackageFactory';\nimport { DrugPackageRegistryContract } from '../types/truffle-contracts/DrugPackageRegistry';\nimport { GateKeeperContract } from '../types/truffle-contracts/GateKeeper';\nimport { ManufacturerRoleRegistryContract } from '../types/truffle-contracts/ManufacturerRoleRegistry';\n\nconst GateKeeper: GateKeeperContract = artifacts.require('GateKeeper');\nconst DrugPackageRegistry: DrugPackageRegistryContract = artifacts.require('DrugPackageRegistry');\nconst DrugPackageFactory: DrugPackageFactoryContract = artifacts.require('DrugPackageFactory');\nconst AdminRoleRegistry: AdminRoleRegistryContract = artifacts.require('AdminRoleRegistry');\nconst ManufacturerRoleRegistry: ManufacturerRoleRegistryContract = artifacts.require('ManufacturerRoleRegistry');\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { enabledFeatures, storeIpfsHash } = require('../../truffle-config.js'); // two dirs up, because it is compiled into ./dist/migrations\n\nmodule.exports = async (deployer: Truffle.Deployer, network: string, accounts: string[]) => {\n  if (enabledFeatures().includes('DRUGPACKAGE')) {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const uiDefinitions = require('../../contracts/drugpackage/UIDefinitions.json');\n\n    const { factory } = await deployStateMachineSystem(\n      deployer,\n      accounts,\n      GateKeeper,\n      DrugPackageRegistry,\n      DrugPackageFactory,\n      [AdminRoleRegistry, ManufacturerRoleRegistry],\n      uiDefinitions\n    );\n\n    const DrugPackages = [\n      {\n        labellerCode: '63851',\n        productCode: '501',\n        packageCode: '02',\n        type: 'Vaccine',\n        name: 'RabAvert',\n        dosageForm: 'Injection',\n        labeller: 'GSK Vaccines GmbH',\n        manufacturingDate: dayjs().subtract(3, 'month').unix(),\n        packageDesign: 'QmfMRTV5iXVf8gf12V8wTosvHWpf3jkuDeYvEcHXLxZ69G',\n      },\n      {\n        labellerCode: '66828',\n        productCode: '0030',\n        packageCode: '02',\n        type: 'Human Prescription Drug',\n        name: 'Gleevec',\n        dosageForm: 'Tablet',\n        labeller: 'Novartis Pharma Produktions GmbH',\n        activeSubstance: 'Imatinib Mesylate',\n        manufacturingDate: dayjs().subtract(3, 'year').unix(),\n        packageDesign: 'QmQw3cFPLR57xaSg5iC7hjABZLMh2xemiskcuLMRZwwxgH',\n      },\n    ];\n\n    for (const drugPackage of DrugPackages) {\n      await createDrugPackage(factory, drugPackage);\n    }\n  }\n};\n\nasync function createDrugPackage(\n  factory: DrugPackageFactoryInstance,\n  drugPackage: {\n    labellerCode: string;\n    productCode: string;\n    packageCode: string;\n    type: string;\n    name: string;\n    dosageForm: string;\n    labeller: string;\n    activeSubstance?: string;\n    manufacturingDate: number;\n    packageDesign: string;\n  }\n) {\n  const ipfsHash = await storeIpfsHash({\n    type: drugPackage.type,\n    name: drugPackage.name,\n    dosageForm: drugPackage.dosageForm,\n    labeller: drugPackage.labeller,\n    activeSubstance: drugPackage.activeSubstance,\n    manufacturingDate: drugPackage.manufacturingDate,\n    packageDesign: drugPackage.packageDesign,\n  });\n  await factory.create(drugPackage.labellerCode, drugPackage.productCode, drugPackage.packageCode, ipfsHash);\n}\n"]}