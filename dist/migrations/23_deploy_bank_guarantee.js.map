{"version":3,"file":"23_deploy_bank_guarantee.js","sourceRoot":"","sources":["../../migrations/23_deploy_bank_guarantee.ts"],"names":[],"mappings":";;;;;AAAA,+EAAiG;AACjG,kDAA0B;AAa1B,MAAM,UAAU,GAAuB,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AACvE,MAAM,qBAAqB,GAAkC,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;AACxG,MAAM,oBAAoB,GAAiC,SAAS,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;AACrG,MAAM,iBAAiB,GAA8B,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAE5F,MAAM,gBAAgB,GAA6B,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACzF,MAAM,qBAAqB,GAAkC,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAExG,8DAA8D;AAC9D,MAAM,EAAE,eAAe,EAAE,aAAa,EAAE,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC,6DAA6D;AAE5I,MAAM,CAAC,OAAO,GAAG,KAAK,EAAE,QAA0B,EAAE,OAAe,EAAE,QAAkB,EAAE,EAAE;IACzF,IAAI,eAAe,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;QACpC,8DAA8D;QAC9D,MAAM,aAAa,GAAG,OAAO,CAAC,kDAAkD,CAAC,CAAC;QAElF,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,iDAAwB,CAChD,QAAQ,EACR,QAAQ,EACR,UAAU,EACV,qBAAqB,EACrB,oBAAoB,EACpB,CAAC,iBAAiB,EAAE,gBAAgB,EAAE,qBAAqB,CAAC,EAC5D,aAAa,EACb,aAAa,CACd,CAAC;QAEF,MAAM,cAAc,GAAG;YACrB;gBACE,IAAI,EAAE,MAAM;gBACZ,aAAa,EAAE,YAAY;gBAC3B,eAAe,EAAE,IAAI;gBACrB,eAAe,EAAE,aAAa;gBAC9B,MAAM,EAAE,KAAK;gBACb,aAAa,EAAE,0BAA0B;gBACzC,QAAQ,EAAE,KAAK;gBACf,YAAY,EAAE,eAAK,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE;gBACxC,YAAY,EAAE,eAAK,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE;gBACxC,UAAU,EAAE,eAAK,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE;gBACtC,OAAO,EAAE,gDAAgD;gBACzD,YAAY,EAAE,OAAO;aACtB;SACF,CAAC;QACF,KAAK,MAAM,cAAc,IAAI,cAAc,EAAE;YAC3C,MAAM,mBAAmB,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;SACpD;KACF;AACH,CAAC,CAAC;AAEF,KAAK,UAAU,mBAAmB,CAChC,OAAqC,EACrC,aAaC;IAED,MAAM,QAAQ,GAAG,MAAM,0CAAiB,CAAC;QACvC,aAAa,EAAE,aAAa,CAAC,aAAa;QAC1C,eAAe,EAAE,aAAa,CAAC,eAAe;QAC9C,eAAe,EAAE,aAAa,CAAC,eAAe;QAC9C,MAAM,EAAE,aAAa,CAAC,MAAM;QAC5B,aAAa,EAAE,aAAa,CAAC,aAAa;QAC1C,QAAQ,EAAE,aAAa,CAAC,QAAQ;QAChC,YAAY,EAAE,aAAa,CAAC,YAAY;QACxC,YAAY,EAAE,aAAa,CAAC,YAAY;QACxC,UAAU,EAAE,aAAa,CAAC,UAAU;QACpC,OAAO,EAAE,aAAa,CAAC,OAAO;QAC9B,YAAY,EAAE,aAAa,CAAC,YAAY;KACzC,CAAC,CAAC;IACH,MAAM,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AACrD,CAAC","sourcesContent":["import { deployStateMachineSystem, storeIpfsJsonData } from '@settlemint/enteth-migration-utils';\nimport dayjs from 'dayjs';\n\nimport { AdminRoleRegistryContract } from '../types/truffle-contracts/AdminRoleRegistry';\nimport { GateKeeperContract } from '../types/truffle-contracts/GateKeeper';\nimport {\n  BankGuaranteeFactoryContract,\n  BankGuaranteeFactoryInstance,\n} from '../types/truffle-contracts/BankGuaranteeFactory';\nimport { BankGuaranteeRegistryContract } from '../types/truffle-contracts/BankGuaranteeRegistry';\n\nimport { BankRoleRegistryContract } from '../types/truffle-contracts/BankRoleRegistry';\nimport { ApplicantRoleRegistryContract } from '../types/truffle-contracts/ApplicantRoleRegistry';\n\nconst GateKeeper: GateKeeperContract = artifacts.require('GateKeeper');\nconst BankGuaranteeRegistry: BankGuaranteeRegistryContract = artifacts.require('BankGuaranteeRegistry');\nconst BankGuaranteeFactory: BankGuaranteeFactoryContract = artifacts.require('BankGuaranteeFactory');\nconst AdminRoleRegistry: AdminRoleRegistryContract = artifacts.require('AdminRoleRegistry');\n\nconst BankRoleRegistry: BankRoleRegistryContract = artifacts.require('BankRoleRegistry');\nconst ApplicantRoleRegistry: ApplicantRoleRegistryContract = artifacts.require('ApplicantRoleRegistry');\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { enabledFeatures, storeIpfsHash } = require('../../truffle-config.js'); // two dirs up, because it is compiled into ./dist/migrations\n\nmodule.exports = async (deployer: Truffle.Deployer, network: string, accounts: string[]) => {\n  if (enabledFeatures().includes('BG')) {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const uiDefinitions = require('../../contracts/bankguarantee/UIDefinitions.json');\n\n    const { factory } = await deployStateMachineSystem(\n      deployer,\n      accounts,\n      GateKeeper,\n      BankGuaranteeRegistry,\n      BankGuaranteeFactory,\n      [AdminRoleRegistry, BankRoleRegistry, ApplicantRoleRegistry],\n      uiDefinitions,\n      storeIpfsHash\n    );\n\n    const BankGuarantees = [\n      {\n        Name: 'BG-1',\n        nameApplicant: 'Settlemint',\n        nameBeneficiary: 'WB',\n        nameIssuingBank: 'Indian Bank',\n        amount: 10233,\n        amountInWords: 'One zero two three three',\n        currency: 'INR',\n        dateIssuance: dayjs('2020-08-08').unix(),\n        dateMaturity: dayjs('2020-08-08').unix(),\n        dateExpiry: dayjs('2020-08-08').unix(),\n        purpose: 'QmUF8Ehv5REwdJSE64Cp379vRhnVqH7yxUE67vhxUVmevT',\n        jurisdiction: 'Delhi',\n      },\n    ];\n    for (const abankGuarantee of BankGuarantees) {\n      await createBankGuarantee(factory, abankGuarantee);\n    }\n  }\n};\n\nasync function createBankGuarantee(\n  factory: BankGuaranteeFactoryInstance,\n  BankGuarantee: {\n    Name: string;\n    nameApplicant: string;\n    nameBeneficiary: string;\n    nameIssuingBank: string;\n    amount: number;\n    amountInWords: string;\n    currency: string;\n    dateIssuance: number;\n    dateMaturity: number;\n    dateExpiry: number;\n    purpose: string;\n    jurisdiction: string;\n  }\n) {\n  const ipfsHash = await storeIpfsJsonData({\n    nameApplicant: BankGuarantee.nameApplicant,\n    nameBeneficiary: BankGuarantee.nameBeneficiary,\n    nameIssuingBank: BankGuarantee.nameIssuingBank,\n    amount: BankGuarantee.amount,\n    amountInWords: BankGuarantee.amountInWords,\n    currency: BankGuarantee.currency,\n    dateIssuance: BankGuarantee.dateIssuance,\n    dateMaturity: BankGuarantee.dateMaturity,\n    dateExpiry: BankGuarantee.dateExpiry,\n    purpose: BankGuarantee.purpose,\n    jurisdiction: BankGuarantee.jurisdiction,\n  });\n  await factory.create(BankGuarantee.Name, ipfsHash);\n}\n"]}